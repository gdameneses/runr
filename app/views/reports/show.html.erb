<div class="page-title d-flex justify-content-between mb-4 p-2">
  <h2>Shift Report</h2>
    <div class="buttons">
      <% if @restaurant.report %>
        <%= link_to 'Delete report', report_path(@restaurant.report), class: "btn btn-danger rounded-1 m-1", method: :delete %>
      <% end %>
      <button type="button" class="btn btn-primary rounded-pill m-1" data-bs-toggle="modal" data-bs-target="#exampleModal">
        + Upload report
      </button>
    </div>
</div>
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <% if @restaurant.report %>
      <%= render 'new_existent' %>
    <% else %>
      <%= render 'new' %>
    <% end %>
  </div>
</div>
    <div class="container-fluid report-table" id="report-table">
      <div class="header row text-center border p-1">
        <div class="col divisor"><h5>ID</h5></div>
        <div class="col col-4 divisor"><h5>Name</h5></div>
        <div class="col divisor"><h5>Break</h5></div>
        <div class="col divisor d-flex justify-content-between" id="start">
          <div class="header-arrow"></div>
          <h5 class="header-item">Start</h5>
          <div class="header-arrow">v</div>
        </div>
        <div class="col divisor d-flex justify-content-between" id="finish">
          <div class="header-arrow"></div>
          <h5 class="header-item">Finish</h5>
          <div class="header-arrow"></div>
        </div>
        <div class="col divisor"><h5>Missed</h5></div>
        <div class="col-2"><h5>Manage</h5></div>
      </div>
      <%= turbo_frame_tag 'new', class:"row border p-1 text-center justify-content-end" do %>
        <div class="col-2">
          <%= link_to '+ Add a shift', new_shift_path, class: "btn btn-success p-4 pt-0 pb-0 mt-0 mb-0 col-12", id:"open-form" %>
        </div>
      <% end %>
      <div class="report-table p-0" id="shifts">
        <% if @restaurant.report %>
          <%= render partial: "shifts/shift", collection: @restaurant.report.shifts %>
        <% end %>
      </div>
    </div>
<script>
const table = document.querySelector('#report-table');
const headerRow = table.firstElementChild;
const columns = Array.from(headerRow.children);

const sortGrid = (index, desc) => {
  desc = desc;
  const container = document.querySelector('#shifts');
  const items = Array.from(container.children);
  const sortedItems = items.sort(function(a, b) {
    var aVal = a.querySelectorAll('.cell')[index].innerHTML;
    var bVal = b.querySelectorAll('.cell')[index].innerHTML;
    if (desc){
      return new Date(aVal) - new Date(bVal);
    } else {
      return new Date(bVal) - new Date(aVal);
    }
  });
  container.innerHTML = '';
  sortedItems.forEach(function(item) {
    container.appendChild(item);
  });
};

const removeArrows = () => {
  headerRow.children.start.children[2].innerText = '';
  headerRow.children.finish.children[2].innerText = '';
}

const addArrow = (column, desc) => {
  let arrow = column.children[2]
  if (desc) {
    arrow.innerText = 'v';
  } else {
    arrow.innerText = '^'
  }
};

const sortTableFromHeader = () => {

  // console.log(`${column.innerText} at index ${i}. desc = ${desc}`);
  sortGrid(3, true);

  columns.forEach(function (column, i) {
    let desc = true;
    if (i == 3 || i == 4) {
      column.addEventListener("click", function() {
        removeArrows();
        addArrow(column, desc);
        sortGrid(i, desc);
        desc = !desc;
      });
    }
  });
};

sortTableFromHeader();

</script>
